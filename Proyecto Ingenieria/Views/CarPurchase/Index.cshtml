@{
    Layout = null;
    var carId = ViewBag.CarId;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Car Purchase Section</title>
    <link rel="stylesheet" href="~/PurchaseSection/css/style.css">
</head>
<body>
    <!-- Preloader -->
    <div id="preloader">
        <div class="preloader-content">
            <img src="~/StoreTemplate/images/logo-default.png" alt="Tesla Logo" class="preloader-logo">
        </div>
    </div>
    <div class="container">
        <div class="car-preview">
            <img id="car-image" src="/images/placeholder.jpg" alt="Car Image" class="car-image">
        </div>
        <div class="purchase-section">
            <div class="scrollable">
                <h1 id="car-model">Loading...</h1>

                <!-- Colores -->
                <div class="color-picker">
                    <h2>Color</h2>
                    <div id="colors" class="colors">
                        <!-- Los botones de colores se cargarán dinámicamente -->
                    </div>
                </div>

                <!-- Transmisiones -->
                <div class="transmission-picker">
                    <h2>Transmission</h2>
                    <div id="transmissions" class="transmissions">
                        <!-- Las opciones de transmisión se cargarán dinámicamente -->
                    </div>
                </div>

                <!-- Año -->
                <div class="year-picker">
                    <h2>Year</h2>
                    <p id="car-year">Loading...</p>
                </div>
            </div>
            <div class="order">
                <button class="order-button">Order Now</button>
                <span id="selected-price" class="price-display"></span>
            </div>
        </div>
    </div>

    <script>
        const carId = @carId; // Obtener el ID desde el controlador
        let carDetails = []; // Variable global para almacenar detalles del coche
        let selectedColor = null;
        let selectedTransmission = null;

        function showPreloader() {
            document.getElementById('preloader').style.display = 'flex';
        }

        function hidePreloader() {
            const preloader = document.getElementById('preloader');
            preloader.style.opacity = "0"; // Suaviza la desaparición
            preloader.style.transition = "opacity 0.5s ease"; // Efecto de desvanecimiento

            setTimeout(() => {
                preloader.style.display = "none";
            }, 500);
        }

        async function loadCarData(carId) {
            try {
                showPreloader();

                const response = await fetch(`https://localhost:7277/api/Car/${carId}`);
                if (!response.ok) {
                    throw new Error('Car not found');
                }

                const car = await response.json();
                hidePreloader();

                // Actualiza modelo, año, imagen
                document.getElementById('car-model').innerText = car.model;
                document.getElementById('car-year').innerText = car.year;
                const carImageElement = document.getElementById('car-image');
                const modelName = car.model.toLowerCase().replace(/\s+/g, '-');
                carImageElement.src = `/PurchaseSection/images/${modelName}.jpg`;
                carImageElement.alt = `${car.model} Image`;

                carDetails = car.carDetails?.$values ?? [];

                // Renderiza colores y transmisiones
                renderOptions(carDetails);
            } catch (error) {
                console.error('Error loading car data:', error);
                alert('Failed to load car data. Please try again.');
            }
        }

        function renderOptions(carDetails) {
            const uniqueColors = [...new Set(carDetails.map(detail => detail.color))];
            const uniqueTransmissions = [...new Set(carDetails.map(detail => detail.transmissionType))];

            const colorsContainer = document.getElementById('colors');
            colorsContainer.innerHTML = ''; // Limpia colores previos
            uniqueColors.forEach(color => {
                const colorButton = document.createElement('button');
                colorButton.classList.add('color-option');
                colorButton.innerText = color;
                colorButton.style.backgroundColor = color.toLowerCase();
                colorButton.style.color = color.toLowerCase() === 'white' ? 'black' : 'white';
                colorButton.addEventListener('click', () => {
                    document.querySelector('.color-option.selected')?.classList.remove('selected');
                    colorButton.classList.add('selected');
                    selectedColor = color;
                    updatePrice();
                });
                colorsContainer.appendChild(colorButton);
            });

            const transmissionsContainer = document.getElementById('transmissions');
            transmissionsContainer.innerHTML = ''; // Limpia transmisiones previas
            uniqueTransmissions.forEach(transmission => {
                const transmissionButton = document.createElement('button');
                transmissionButton.classList.add('transmission-option');
                transmissionButton.innerText = transmission;
                transmissionButton.addEventListener('click', () => {
                    document.querySelector('.transmission-option.selected')?.classList.remove('selected');
                    transmissionButton.classList.add('selected');
                    selectedTransmission = transmission;
                    updatePrice();
                });
                transmissionsContainer.appendChild(transmissionButton);
            });
        }

        function updatePrice() {
            const priceDisplay = document.getElementById('selected-price');
            const selectedDetail = carDetails.find(
                detail =>
                    detail.color === selectedColor &&
                    detail.transmissionType === selectedTransmission
            );
            if (selectedDetail) {
                priceDisplay.innerText = `Price: $${selectedDetail.price.toFixed(2)}`;
            } else {
                priceDisplay.innerText = 'No disponible';
            }
        }

        document.querySelector('.order-button').addEventListener('click', () => {
            const selectedDetail = carDetails.find(
                detail =>
                    detail.color === selectedColor &&
                    detail.transmissionType === selectedTransmission
            );

            if (selectedDetail) {
                // Usa directamente los valores cargados desde la API
                const orderData = {
                    model: document.getElementById('car-model').innerText, // Modelo mostrado en la interfaz
                    year: document.getElementById('car-year').innerText,  // Año mostrado en la interfaz
                    color: selectedColor,
                    transmission: selectedTransmission,
                    price: selectedDetail.price.toFixed(2),
                };

                localStorage.setItem('orderData', JSON.stringify(orderData));
                window.location.href = '/PurchaseSection'; // Redirige a resumen
            } else {
                alert('Please select a color and transmission.');
            }
        });


        loadCarData(carId);
    </script>

</body>
</html>
